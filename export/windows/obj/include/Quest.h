// Generated by Haxe 4.1.2
#ifndef INCLUDED_Quest
#define INCLUDED_Quest

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Quest)



class HXCPP_CLASS_ATTRIBUTES Quest_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Quest_obj OBJ_;
		Quest_obj();

	public:
		enum { _hx_ClassId = 0x3d10f93a };

		void __construct(::String Prompt,::String Solution,int Num,::String Hint);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Quest")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Quest"); }
		static ::hx::ObjectPtr< Quest_obj > __new(::String Prompt,::String Solution,int Num,::String Hint);
		static ::hx::ObjectPtr< Quest_obj > __alloc(::hx::Ctx *_hx_ctx,::String Prompt,::String Solution,int Num,::String Hint);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Quest_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Quest",c2,fb,17,f1); }

		::String prompt;
		::String solution;
		int num;
		::String hint;
		void update();
		::Dynamic update_dyn();

};


#endif /* INCLUDED_Quest */ 
